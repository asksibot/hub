<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>Life Timeline Questionnaire for Janice and Kent Horne</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
            max-width: 800px;
        }
        h1, h2, h3, h4 {
            color: #2C3E50;
        }
        .section {
            margin-bottom: 40px;
        }
        .subsection {
            margin-bottom: 20px;
            padding-left: 20px;
        }
        .question {
            margin-bottom: 20px;
        }
        label {
            display: block;
            font-weight: bold;
            margin-bottom: 5px;
        }
        input[type="text"], input[type="date"], textarea {
            width: 100%;
            font-size: 14px;
            padding: 10px;
            margin-bottom: 10px;
        }
        textarea {
            min-height: 80px;
            resize: vertical;
        }
        .btn {
            padding: 10px 20px;
            background-color: #2980B9;
            color: #fff;
            border: none;
            cursor: pointer;
            margin-right: 10px;
            font-size: 16px;
        }
        .btn:hover {
            background-color: #1F618D;
        }
        #narrativeContent {
            background-color: #F8F9F9;
            padding: 20px;
            border: 1px solid #D5D8DC;
        }
        /* Collapsible Sections */
        .collapsible {
            background-color: #e7e7e7;
            color: #2C3E50;
            cursor: pointer;
            padding: 10px;
            width: 100%;
            border: none;
            text-align: left;
            outline: none;
            font-size: 18px;
            margin-bottom: 5px;
        }
        .active, .collapsible:hover {
            background-color: #ccc;
        }
        .content {
            padding: 0 15px;
            display: none;
            overflow: hidden;
            background-color: #f9f9f9;
        }
        /* Buttons for dynamic forms */
        .add-btn {
            background-color: #27AE60;
            margin-bottom: 10px;
        }
        .remove-btn {
            background-color: #C0392B;
            margin-top: -5px;
            margin-bottom: 15px;
        }
        /* Responsive Design */
        @media (max-width: 600px) {
            body {
                margin: 10px;
            }
            .btn {
                width: 100%;
                margin-bottom: 10px;
            }
        }
    </style>
</head>
<body>

    <h1>Life Timeline Questionnaire for Janice and Kent Horne</h1>

    <!-- Questionnaire Form -->
    <div id="questionnaireForm">
        <!-- Sections will be dynamically generated here -->
    </div>

    <!-- Buttons -->
    <button class="btn" onclick="generateNarrative()">Generate Narrative</button>
    <button class="btn" onclick="downloadPDF()" id="downloadBtn" style="display:none;">Download PDF</button>

    <!-- Compiled Narrative -->
    <div id="narrativeSection" style="display:none; margin-top:40px;">
        <h2>Compiled Narrative</h2>
        <div id="narrativeContent"></div>
    </div>

    <!-- jsPDF Library -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <!-- html2canvas Library -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js"></script>

    <script>
        // Data Structure for Questionnaire
        const questionnaireData = [
            // Section 1: Early Years
            {
                sectionTitle: 'Section 1: Early Years',
                participants: [
                    {
                        name: 'Janice Josephine (Zarr) Horne',
                        prefix: 'janice',
                        questions: [
                            { id: 'birthPlace', label: '1. Place of Birth:', type: 'text', placeholder: 'City, State/Province, Country' },
                            { id: 'dateOfBirth', label: '2. Date of Birth:', type: 'date' },
                            { id: 'familyHeritage', label: '3. Family Heritage:', type: 'textarea', placeholder: 'Describe your family background and heritage' },
                            // Dynamic Parents Section
                            { id: 'parents', label: '4. Parents:', type: 'dynamic', entity: 'Parent' },
                            // Dynamic Grandparents Section
                            { id: 'grandparents', label: '5. Grandparents:', type: 'dynamic', entity: 'Grandparent' },
                            // Dynamic Siblings Section
                            { id: 'siblings', label: '6. Siblings:', type: 'dynamic', entity: 'Sibling' },
                            { id: 'childhoodHome', label: '7. Childhood Home:', type: 'textarea', placeholder: 'Describe your home and neighborhood' },
                            { id: 'earlyMemories', label: '8. Early Memories:', type: 'textarea', placeholder: 'Some of your earliest memories' },
                            { id: 'familyTraditions', label: '9. Family Traditions:', type: 'textarea', placeholder: 'Special traditions or routines' },
                            { id: 'childhoodHobbies', label: '10. Hobbies and Activities:', type: 'textarea', placeholder: 'Favorite hobbies or activities' },
                            { id: 'pets', label: '11. Pets:', type: 'textarea', placeholder: 'Pets you had, names, stories' }
                        ]
                    },
                    {
                        name: 'Kent James Horne',
                        prefix: 'kent',
                        questions: [
                            { id: 'birthPlace', label: '1. Place of Birth:', type: 'text', placeholder: 'City, State/Province, Country' },
                            { id: 'dateOfBirth', label: '2. Date of Birth:', type: 'date' },
                            { id: 'familyHeritage', label: '3. Family Heritage:', type: 'textarea', placeholder: 'Describe your family background and heritage' },
                            // Dynamic Parents Section
                            { id: 'parents', label: '4. Parents:', type: 'dynamic', entity: 'Parent' },
                            // Dynamic Grandparents Section
                            { id: 'grandparents', label: '5. Grandparents:', type: 'dynamic', entity: 'Grandparent' },
                            // Dynamic Siblings Section
                            { id: 'siblings', label: '6. Siblings:', type: 'dynamic', entity: 'Sibling' },
                            { id: 'childhoodHome', label: '7. Childhood Home:', type: 'textarea', placeholder: 'Describe your home and neighborhood' },
                            { id: 'earlyMemories', label: '8. Early Memories:', type: 'textarea', placeholder: 'Some of your earliest memories' },
                            { id: 'familyTraditions', label: '9. Family Traditions:', type: 'textarea', placeholder: 'Special traditions or routines' },
                            { id: 'childhoodHobbies', label: '10. Hobbies and Activities:', type: 'textarea', placeholder: 'Favorite hobbies or activities' },
                            { id: 'pets', label: '11. Pets:', type: 'textarea', placeholder: 'Pets you had, names, stories' }
                        ]
                    }
                ]
            },
            // Section 2: Adolescence
            {
                sectionTitle: 'Section 2: Adolescence',
                participants: [
                    {
                        name: 'Janice Josephine (Zarr) Horne',
                        prefix: 'janice',
                        questions: [
                            { id: 'elementarySchool', label: '1. Elementary School:', type: 'text', placeholder: 'Name, location, years attended, experiences' },
                            { id: 'middleSchool', label: '2. Middle School/Junior High:', type: 'text', placeholder: 'Name, location, years attended, experiences' },
                            { id: 'highSchool', label: '3. High School:', type: 'text', placeholder: 'Name, location, years attended, favorite subjects or teachers, achievements' },
                            { id: 'friends', label: '4. Friends:', type: 'textarea', placeholder: 'Closest friends, activities, memorable stories' },
                            { id: 'mentors', label: '5. Influential Teachers or Mentors:', type: 'textarea', placeholder: 'Who influenced you, impact on life' },
                            { id: 'teenageHobbies', label: '6. Teenage Hobbies:', type: 'textarea', placeholder: 'Favorite hobbies and interests' },
                            { id: 'sportsClubs', label: '7. Sports and Clubs:', type: 'textarea', placeholder: 'Teams or clubs, positions, achievements' },
                            { id: 'partTimeJobs', label: '8. Part-Time Jobs:', type: 'textarea', placeholder: 'Jobs, what you learned' }
                        ]
                    },
                    {
                        name: 'Kent James Horne',
                        prefix: 'kent',
                        questions: [
                            { id: 'elementarySchool', label: '1. Elementary School:', type: 'text', placeholder: 'Name, location, years attended, experiences' },
                            { id: 'middleSchool', label: '2. Middle School/Junior High:', type: 'text', placeholder: 'Name, location, years attended, experiences' },
                            { id: 'highSchool', label: '3. High School:', type: 'text', placeholder: 'Name, location, years attended, favorite subjects or teachers, achievements' },
                            { id: 'friends', label: '4. Friends:', type: 'textarea', placeholder: 'Closest friends, activities, memorable stories' },
                            { id: 'mentors', label: '5. Influential Teachers or Mentors:', type: 'textarea', placeholder: 'Who influenced you, impact on life' },
                            { id: 'teenageHobbies', label: '6. Teenage Hobbies:', type: 'textarea', placeholder: 'Favorite hobbies and interests' },
                            { id: 'sportsClubs', label: '7. Sports and Clubs:', type: 'textarea', placeholder: 'Teams or clubs, positions, achievements' },
                            { id: 'partTimeJobs', label: '8. Part-Time Jobs:', type: 'textarea', placeholder: 'Jobs, what you learned' }
                        ]
                    }
                ]
            },
            // Section 3: Young Adulthood
            {
                sectionTitle: 'Section 3: Young Adulthood',
                participants: [
                    {
                        name: 'Janice Josephine (Zarr) Horne',
                        prefix: 'janice',
                        questions: [
                            { id: 'college', label: '1. College/University:', type: 'textarea', placeholder: 'Did you attend? Details' },
                            { id: 'firstJob', label: '2. First Job:', type: 'textarea', placeholder: 'Job details, responsibilities' },
                            { id: 'careerDevelopment', label: '3. Career Development:', type: 'textarea', placeholder: 'Career journey, milestones' },
                            { id: 'significantRelationships', label: '4. Significant Relationships:', type: 'textarea', placeholder: 'Relationships, impact' },
                            { id: 'firstCar', label: '5. First Car:', type: 'textarea', placeholder: 'Make, model, year, experiences' }
                        ]
                    },
                    {
                        name: 'Kent James Horne',
                        prefix: 'kent',
                        questions: [
                            { id: 'college', label: '1. College/University:', type: 'textarea', placeholder: 'Did you attend? Details' },
                            { id: 'militaryService', label: '2. Military Service:', type: 'textarea', placeholder: 'Branch, rank, years, experiences' },
                            { id: 'careerDevelopment', label: '3. Career Development:', type: 'textarea', placeholder: 'Career journey, milestones' },
                            { id: 'significantRelationships', label: '4. Significant Relationships:', type: 'textarea', placeholder: 'Relationships, impact' },
                            { id: 'firstCar', label: '5. First Car:', type: 'textarea', placeholder: 'Make, model, year, experiences' }
                        ]
                    }
                ]
            },
            // Section 4: Meeting Each Other and Marriage
            {
                sectionTitle: 'Section 4: Meeting Each Other and Marriage',
                participants: [
                    {
                        name: 'Janice and Kent Together',
                        prefix: 'shared',
                        questions: [
                            { id: 'meeting', label: '1. Meeting Each Other:', type: 'textarea', placeholder: 'How and where you met (Bismarck, ND)' },
                            { id: 'courtship', label: '2. Courtship:', type: 'textarea', placeholder: 'Relationship development, experiences' },
                            { id: 'proposal', label: '3. Proposal:', type: 'textarea', placeholder: 'Who proposed, how, reactions' },
                            { id: 'weddingDetails', label: '4. Wedding Details:', type: 'textarea', placeholder: 'Date (October 10, 1959), venue, ceremony' },
                            { id: 'feelingsReflections', label: '5. Feelings and Reflections:', type: 'textarea', placeholder: 'Emotions, hopes, dreams' }
                        ]
                    }
                ]
            },
            // Section 5: Early Marriage and Family Life
            {
                sectionTitle: 'Section 5: Early Marriage and Family Life',
                participants: [
                    {
                        name: 'Janice Josephine (Zarr) Horne',
                        prefix: 'janice',
                        questions: [
                            { id: 'homes', label: '1. Homes and Residences:', type: 'textarea', placeholder: 'Places lived, including West Germany' },
                            { id: 'children', label: '2. Children:', type: 'dynamicChildren', entity: 'Child' },
                            { id: 'parenting', label: '3. Parenting Experiences:', type: 'textarea', placeholder: 'Joys, challenges, traditions' },
                            { id: 'familyPets', label: '4. Family Pets:', type: 'textarea', placeholder: 'Pets, names, stories' },
                            { id: 'careerLife', label: '5. Career and Professional Life:', type: 'textarea', placeholder: 'Employment, responsibilities' },
                            { id: 'hobbiesInterests', label: '6. Hobbies and Personal Interests:', type: 'textarea', placeholder: 'Activities, achievements' }
                        ]
                    },
                    {
                        name: 'Kent James Horne',
                        prefix: 'kent',
                        questions: [
                            { id: 'homes', label: '1. Homes and Residences:', type: 'textarea', placeholder: 'Places lived, including West Germany' },
                            { id: 'children', label: '2. Children:', type: 'dynamicChildren', entity: 'Child' },
                            { id: 'militaryFamilyLife', label: '3. Experiences During Military Service:', type: 'textarea', placeholder: 'Army, West Germany, family life' },
                            { id: 'parenting', label: '4. Parenting Experiences:', type: 'textarea', placeholder: 'Joys, challenges, traditions' },
                            { id: 'familyPets', label: '5. Family Pets:', type: 'textarea', placeholder: 'Pets, names, stories' },
                            { id: 'careerLife', label: '6. Career and Professional Life:', type: 'textarea', placeholder: 'Military, civilian career' },
                            { id: 'hobbiesInterests', label: '7. Hobbies and Personal Interests:', type: 'textarea', placeholder: 'Activities, achievements' }
                        ]
                    }
                ]
            },
            // Section 6: Community Involvement and Social Life
            {
                sectionTitle: 'Section 6: Community Involvement and Social Life',
                participants: [
                    {
                        name: 'Janice Josephine (Zarr) Horne',
                        prefix: 'janice',
                        questions: [
                            { id: 'communityEngagement', label: '1. Community Engagement:', type: 'textarea', placeholder: 'Organizations, clubs, volunteer work' },
                            { id: 'socialActivities', label: '2. Social Activities:', type: 'textarea', placeholder: 'Social circle, events, friendships' }
                        ]
                    },
                    {
                        name: 'Kent James Horne',
                        prefix: 'kent',
                        questions: [
                            { id: 'communityEngagement', label: '1. Community Engagement:', type: 'textarea', placeholder: 'Organizations, clubs, volunteer work' },
                            { id: 'socialActivities', label: '2. Social Activities:', type: 'textarea', placeholder: 'Social circle, events, friendships' }
                        ]
                    }
                ]
            },
            // Section 7: Significant Events and Challenges
            {
                sectionTitle: 'Section 7: Significant Events and Challenges',
                participants: [
                    {
                        name: 'Janice Josephine (Zarr) Horne',
                        prefix: 'janice',
                        questions: [
                            { id: 'historicalEvents', label: '1. Historical Events:', type: 'textarea', placeholder: 'Events that impacted you' },
                            { id: 'personalChallenges', label: '2. Personal Challenges:', type: 'textarea', placeholder: 'Obstacles faced, how you overcame them' },
                            { id: 'achievements', label: '3. Achievements:', type: 'textarea', placeholder: 'Personal or professional achievements' }
                        ]
                    },
                    {
                        name: 'Kent James Horne',
                        prefix: 'kent',
                        questions: [
                            { id: 'historicalEvents', label: '1. Historical Events:', type: 'textarea', placeholder: 'Events that impacted you' },
                            { id: 'militaryConflicts', label: '2. Military Conflicts:', type: 'textarea', placeholder: 'Conflicts affecting your service' },
                            { id: 'personalChallenges', label: '3. Personal Challenges:', type: 'textarea', placeholder: 'Obstacles faced, how you overcame them' },
                            { id: 'achievements', label: '4. Achievements:', type: 'textarea', placeholder: 'Personal or professional achievements' }
                        ]
                    }
                ]
            },
            // Section 8: Later Years and Reflections
            {
                sectionTitle: 'Section 8: Later Years and Reflections',
                participants: [
                    {
                        name: 'Janice Josephine (Zarr) Horne',
                        prefix: 'janice',
                        questions: [
                            { id: 'lifeLessons', label: '1. Life Lessons:', type: 'textarea', placeholder: 'Important lessons learned' },
                            { id: 'advice', label: '2. Advice to Future Generations:', type: 'textarea', placeholder: 'Wisdom or guidance' },
                            { id: 'legacy', label: '3. Legacy:', type: 'textarea', placeholder: 'How you\'d like to be remembered' },
                            { id: 'futureAspirations', label: '4. Future Aspirations:', type: 'textarea', placeholder: 'Current goals, new skills' }
                        ]
                    },
                    {
                        name: 'Kent James Horne',
                        prefix: 'kent',
                        questions: [
                            { id: 'lifeLessons', label: '1. Life Lessons:', type: 'textarea', placeholder: 'Important lessons learned' },
                            { id: 'advice', label: '2. Advice to Future Generations:', type: 'textarea', placeholder: 'Wisdom or guidance' },
                            { id: 'legacy', label: '3. Legacy:', type: 'textarea', placeholder: 'How you\'d like to be remembered' },
                            { id: 'futureAspirations', label: '4. Future Aspirations:', type: 'textarea', placeholder: 'Current goals, new skills' }
                        ]
                    }
                ]
            },
            // Section 9: Additional Topics
            {
                sectionTitle: 'Section 9: Additional Topics',
                participants: [
                    {
                        name: 'Janice Josephine (Zarr) Horne',
                        prefix: 'janice',
                        questions: [
                            { id: 'firstsFavorites', label: '1. Firsts and Favorites:', type: 'textarea', placeholder: 'First job, favorite books, movies' },
                            { id: 'culturalPractices', label: '2. Cultural and Religious Practices:', type: 'textarea', placeholder: 'Role of religion or spirituality' },
                            { id: 'healthWellness', label: '3. Health and Wellness:', type: 'textarea', placeholder: 'Approach to health, challenges' },
                            { id: 'technologyChanges', label: '4. Technology and Changes:', type: 'textarea', placeholder: 'Impact of technological advancements' }
                        ]
                    },
                    {
                        name: 'Kent James Horne',
                        prefix: 'kent',
                        questions: [
                            { id: 'firstsFavorites', label: '1. Firsts and Favorites:', type: 'textarea', placeholder: 'First job, favorite books, movies' },
                            { id: 'culturalPractices', label: '2. Cultural and Religious Practices:', type: 'textarea', placeholder: 'Role of religion or spirituality' },
                            { id: 'healthWellness', label: '3. Health and Wellness:', type: 'textarea', placeholder: 'Approach to health, challenges' },
                            { id: 'technologyChanges', label: '4. Technology and Changes:', type: 'textarea', placeholder: 'Impact of technological advancements' }
                        ]
                    }
                ]
            }
        ];

        // Function to Generate the Questionnaire Form
        function generateQuestionnaire() {
            const form = document.getElementById('questionnaireForm');

            questionnaireData.forEach(section => {
                const sectionDiv = document.createElement('div');
                sectionDiv.className = 'section';

                const sectionButton = document.createElement('button');
                sectionButton.type = 'button';
                sectionButton.className = 'collapsible';
                sectionButton.textContent = section.sectionTitle;
                sectionDiv.appendChild(sectionButton);

                const contentDiv = document.createElement('div');
                contentDiv.className = 'content';

                section.participants.forEach(participant => {
                    const participantDiv = document.createElement('div');
                    participantDiv.id = participant.prefix + '_' + section.sectionTitle.replace(/\s+/g, '');
                    participantDiv.innerHTML = `<h3>${participant.name}</h3>`;

                    participant.questions.forEach(q => {
                        if (q.type === 'dynamic' || q.type === 'dynamicChildren') {
                            // Dynamic Section (e.g., Parents, Grandparents, Siblings, Children)
                            const dynamicDiv = document.createElement('div');
                            dynamicDiv.className = 'subsection';
                            dynamicDiv.id = `${participant.prefix}_${q.id}_container`;

                            const dynamicLabel = document.createElement('h4');
                            dynamicLabel.textContent = q.label;
                            dynamicDiv.appendChild(dynamicLabel);

                            const addBtn = document.createElement('button');
                            addBtn.type = 'button';
                            addBtn.className = 'btn add-btn';
                            addBtn.textContent = `Add ${q.entity}`;
                            addBtn.onclick = function() {
                                addDynamicEntry(participant.prefix, q.id, q.entity, q.type);
                            };
                            dynamicDiv.appendChild(addBtn);

                            participantDiv.appendChild(dynamicDiv);
                        } else {
                            const questionDiv = document.createElement('div');
                            questionDiv.className = 'question';

                            const label = document.createElement('label');
                            label.htmlFor = participant.prefix + '_' + q.id;
                            label.textContent = q.label;
                            questionDiv.appendChild(label);

                            let inputElement;
                            if (q.type === 'textarea') {
                                inputElement = document.createElement('textarea');
                                inputElement.placeholder = q.placeholder;
                            } else if (q.type === 'date' || q.type === 'text') {
                                inputElement = document.createElement('input');
                                inputElement.type = q.type;
                                inputElement.placeholder = q.placeholder;
                            }
                            inputElement.id = participant.prefix + '_' + q.id;

                            // Load saved data from localStorage
                            if (localStorage.getItem(inputElement.id)) {
                                inputElement.value = localStorage.getItem(inputElement.id);
                            }

                            // Save data to localStorage on input
                            inputElement.addEventListener('input', function () {
                                localStorage.setItem(this.id, this.value);
                            });

                            questionDiv.appendChild(inputElement);
                            participantDiv.appendChild(questionDiv);
                        }
                    });

                    contentDiv.appendChild(participantDiv);
                });

                sectionDiv.appendChild(contentDiv);
                form.appendChild(sectionDiv);
            });

            // Collapsible Sections Functionality
            var coll = document.getElementsByClassName('collapsible');
            for (var i = 0; i < coll.length; i++) {
                coll[i].addEventListener('click', function () {
                    this.classList.toggle('active');
                    var content = this.nextElementSibling;
                    if (content.style.display === 'block') {
                        content.style.display = 'none';
                    } else {
                        content.style.display = 'block';
                    }
                });
            }
        }

        // Function to Add Dynamic Entries (Parents, Grandparents, Siblings, Children)
        function addDynamicEntry(prefix, sectionId, entity, type) {
            const container = document.getElementById(`${prefix}_${sectionId}_container`);

            const index = container.querySelectorAll('.dynamic-entry').length;

            const entryDiv = document.createElement('div');
            entryDiv.className = 'dynamic-entry';
            entryDiv.style.border = '1px solid #ccc';
            entryDiv.style.padding = '10px';
            entryDiv.style.marginBottom = '10px';

            const removeBtn = document.createElement('button');
            removeBtn.type = 'button';
            removeBtn.className = 'btn remove-btn';
            removeBtn.textContent = `Remove ${entity}`;
            removeBtn.onclick = function() {
                container.removeChild(entryDiv);
                // Remove from localStorage
                const inputs = entryDiv.querySelectorAll('input, textarea');
                inputs.forEach(input => {
                    localStorage.removeItem(input.id);
                });
            };
            entryDiv.appendChild(removeBtn);

            let fields = [];
            if (type === 'dynamicChildren') {
                // Fields for Children
                fields = [
                    { id: 'name', label: `${entity} Name:`, type: 'text', placeholder: 'Full Name' },
                    { id: 'dateOfBirth', label: `${entity} Date of Birth:`, type: 'date' },
                    { id: 'placeOfBirth', label: `${entity} Place of Birth:`, type: 'text', placeholder: 'City, State/Province, Country' },
                    { id: 'godparents', label: `${entity} Godparents:`, type: 'text', placeholder: 'Names of Godparents' },
                    { id: 'nameOrigin', label: `Origin of ${entity}'s Name:`, type: 'textarea', placeholder: 'Meaning or reason for the name' },
                    { id: 'memorableMoments', label: `Memorable Moments with ${entity}:`, type: 'textarea', placeholder: 'Share memorable experiences' }
                ];
            } else {
                // Fields for Parents, Grandparents, Siblings
                fields = [
                    { id: 'name', label: `${entity} Name:`, type: 'text', placeholder: 'Full Name' },
                    { id: 'dateOfBirth', label: `${entity} Date of Birth:`, type: 'date' },
                    { id: 'placeOfBirth', label: `${entity} Place of Birth:`, type: 'text', placeholder: 'City, State/Province, Country' },
                    { id: 'occupation', label: `${entity} Occupation:`, type: 'text', placeholder: 'Occupation' },
                    { id: 'memories', label: `Memories or Stories about ${entity}:`, type: 'textarea', placeholder: 'Share any notable memories or stories' }
                ];
            }

            fields.forEach(field => {
                const fieldDiv = document.createElement('div');
                fieldDiv.className = 'question';

                const label = document.createElement('label');
                label.htmlFor = `${prefix}_${sectionId}_${entity}_${index}_${field.id}`;
                label.textContent = field.label;
                fieldDiv.appendChild(label);

                let inputElement;
                if (field.type === 'textarea') {
                    inputElement = document.createElement('textarea');
                    inputElement.placeholder = field.placeholder;
                } else {
                    inputElement = document.createElement('input');
                    inputElement.type = field.type;
                    inputElement.placeholder = field.placeholder;
                }
                inputElement.id = `${prefix}_${sectionId}_${entity}_${index}_${field.id}`;

                // Load saved data from localStorage
                if (localStorage.getItem(inputElement.id)) {
                    inputElement.value = localStorage.getItem(inputElement.id);
                }

                // Save data to localStorage on input
                inputElement.addEventListener('input', function () {
                    localStorage.setItem(this.id, this.value);
                });

                fieldDiv.appendChild(inputElement);
                entryDiv.appendChild(fieldDiv);
            });

            container.appendChild(entryDiv);
        }

        // Function to Collect Data and Generate Narrative
        function generateNarrative() {
            var narrative = '';

            questionnaireData.forEach(section => {
                narrative += `<h2>${section.sectionTitle}</h2>`;
                section.participants.forEach(participant => {
                    narrative += `<h3>${participant.name}</h3>`;
                    participant.questions.forEach(q => {
                        if (q.type === 'dynamic' || q.type === 'dynamicChildren') {
                            const container = document.getElementById(`${participant.prefix}_${q.id}_container`);
                            const entries = container.querySelectorAll('.dynamic-entry');
                            if (entries.length > 0) {
                                narrative += `<h4>${q.label}</h4>`;
                                entries.forEach((entry, index) => {
                                    narrative += `<p><strong>${q.entity} ${index + 1}:</strong></p>`;
                                    const inputs = entry.querySelectorAll('input, textarea');
                                    inputs.forEach(input => {
                                        const label = input.previousSibling.textContent;
                                        const value = input.value.trim();
                                        if (value) {
                                            narrative += `<p><strong>${label}</strong> ${value}</p>`;
                                        }
                                    });
                                });
                            }
                        } else {
                            var value = document.getElementById(participant.prefix + '_' + q.id).value.trim();
                            if (value) {
                                narrative += `<p><strong>${q.label}</strong> ${value}</p>`;
                            }
                        }
                    });
                });
            });

            if (narrative.trim() === '') {
                alert('Please fill out the questionnaire before generating the narrative.');
                return;
            }

            document.getElementById('narrativeContent').innerHTML = narrative;
            document.getElementById('narrativeSection').style.display = 'block';
            document.getElementById('downloadBtn').style.display = 'inline-block';
        }

        // Function to Download Narrative as PDF
        function downloadPDF() {
            const { jsPDF } = window.jspdf;

            const doc = new jsPDF('p', 'pt', 'letter');

            // Get the narrative content
            const content = document.getElementById('narrativeContent');

            // Convert HTML to PDF
            doc.html(content, {
                callback: function (doc) {
                    doc.save('Janice_Kent_Narrative.pdf');
                },
                x: 20,
                y: 20,
                width: 570, // Maximum width of content on PDF
                windowWidth: 800 // Width of virtual window
            });
        }

        // Initialize the Questionnaire on Page Load
        window.onload = function () {
            generateQuestionnaire();
        };
    </script>

</body>
</html>